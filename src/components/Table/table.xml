<div class="relative">
  <div class="overflow-hidden">
    <table t-att-class="props.class" class="w-full text-sm">
      <thead>
        <tr>
          <td t-if="props.onSelect !== undefined" class="font-medium text-slate-800 py-3 px-2 border-b border-solid border-slate-300 bg-slate-100">
            <!--
            <input type="checkbox" t-on-change="this.toggleAll" t-att="{'checked': this.state.selectAll}" />
            -->
          </td>
          <td t-foreach="state.columns" t-as="col" t-key="col.name"
            class="py-3 font-medium px-2 border-b border-solid border-slate-300 bg-slate-100" t-att-class="{'cursor-pointer': col.sortable !== false}"
            t-on-click="() => this.updateSortOrder(col.name)"
          >
            <div class="flex">
              <span t-esc="col.header || col.name" class="font-medium text-slate-800" />
              <SortOrderViewer t-if="col.sortable !== false" order="filters.sortBy === col.name ? filters.sortOrder : undefined" />
            </div>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td t-if="props.onSelect !== undefined" class="bg-slate-200 border-b border-solid border-slate-300" />
          <td t-foreach="state.columns" t-as="col" t-key="col.name" class="bg-slate-200 border-b border-solid border-slate-300">
            <t t-set="searchFilter" t-value="this.filters.search.find(it => it.column === col.name)" />
            <input type="text" t-att-placeholder="'Search ' + col.name" t-if="col.searchable !== false" t-on-input="(e) => this.searchColumn(col.name, e)" t-att-value="searchFilter ? searchFilter.term : ''"
              class="outline-none w-full p-1 text-xs text-slate-800 border border-transparent focus:border-compassion focus:bg-white focus:shadow-lg border-none" t-att-class="{
                'bg-slate-200': !searchFilter or searchFilter.term.trim() === '',
                'bg-yellow-300 text-yellow-800': searchFilter and searchFilter.term.trim() !== '',
              }" />
          </td>
        </tr>
        <tr t-if="props.data.length === 0">
          <td t-att-colspan="state.columns.length + (props.onSelect === undefined ? 0 : 1)">
            <div class="flex items-center flex-col p-6">
              <Icon icon="'otter'" class="'text-5xl text-blue-400'" />
              <p class="text-slate-600 text-lg">No Result</p>
            </div>
          </td>
        </tr>
        <t t-foreach="props.data" t-as="row" t-key="row[props.keyCol]">
          <Row columns="state.columns"
            data="row"
            onClick="props.onRowClick"
            selected="state.selected.includes(row) || this.state.selectAll"
            selectable="props.onSelect !== undefined"
            last="row_last"
            onToggle="() => this.toggleItem(row)" />
        </t>
      </tbody>
    </table>
  </div>
  <div class="flex justify-between items-center border-t border-solid border-slate-300 p-4" t-if="props.data.length > 0">
    <div class="text-slate-700 text-sm">
      Showing 
      <t t-esc="(filters.pageNumber * props.data.length) + 1" /> - <t t-esc="(filters.pageNumber + 1) * props.data.length" />
      of <t t-esc="props.total" /> Results
    </div>
    <div>
      <PageSelector page="filters.pageNumber" total="props.total" pageSize="filters.pageSize" onPageChange="(page) => this.changePage(page)" />
    </div>
  </div>
  <Transition duration="100"
    active="props.loading"
    enterFrom="'opacity-0'"
    enterTo="'opacity-1'"
    leaveFrom="'opacity-1'"
    leaveTo="'opacity-0'"
    enterActive="'transition-all duration-100'"
    leaveActive="'transition-all duration-100'"
    t-slot-scope="scope"
  >
    <div class="absolute top-0 left-0 w-full h-full bg-white-70 backdrop-filter backdrop-blur flex justify-center items-center" t-att-class="scope.itemClass">
      <Loader class="'text-3xl'">
        <span class="text-slate-600 font-medium text-sm pt-2">Loading Data</span>
      </Loader>
    </div>
  </Transition>
</div>