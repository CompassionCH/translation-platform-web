<LetterViewer letter="state.letter" letterId="props.letterId" loading="state.loading" smallLoading="state.saveLoading and state.internalLoading !== true">
  <!-- action bar buttons -->
  <t t-set-slot="action-buttons" t-slot-scope="buttons">
    <Button color="'red'" level="'secondary'" icon="'triangle-exclamation'" onClick="() => state.signalProblemModal = true" size="'sm'" class="'action-problem'" t-if="!state.letter.translationIssue">Signal a Problem</Button>
    <Button color="'green'" onClick="() => this.save()" icon="'floppy-disk'" level="'secondary'" size="'sm'" class="'action-save'">Save</Button>
    <Button color="'compassion'" onClick="() => this.submit()" icon="'paper-plane'" size="'sm'" class="'action-submit'" t-if="!state.letter.translationIssue">Submit</Button>
  </t>

  <!-- signal problem modal in unsafe slot (no letter) -->
  <t t-set-slot="unsafe">
    <SignalProblem active="state.signalProblemModal" letterId="props.letterId" onClose="() => state.signalProblemModal = false" />
    <ChildModal active="state.childModal" onClose="() => state.childModal = false" />
  </t>

  <!-- loader for letter loading -->
  <t t-set-slot="right-pane">
    <BlurLoader active="state.internalLoading" />
  </t>

  <t t-set-slot="content" t-slot-scope="scope">
    <LetterSubmittedModal active="state.letterSubmitted" letter="scope.letter" />
    <ContentEditor letter="scope.letter"/>
  </t>
</LetterViewer>